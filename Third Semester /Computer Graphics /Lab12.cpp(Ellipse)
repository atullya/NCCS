#include <iostream>
#include <GL/glut.h>
using namespace std;

int xi, yi, a, b;

void plot(int x, int y)
{
    glBegin(GL_POINTS);
    glVertex2i(x + xi, y + yi);
    glEnd();
}

void drawEllipse()
{
    int x = 0;
    int y = b;
    float decision = b * b - a * a * b + 0.25 * a * a;
    int dx = 2 * b * b * x;
    int dy = 2 * a * a * y;

    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0);
    glPointSize(1.0);
    plot(x, y);

    while (dx < dy)
    {
        if (decision < 0)
        {
            x++;
            dx += 2 * b * b;
            decision += dx + b * b;
        }
        else
        {
            x++;
            y--;
            dx += 2 * b * b;
            dy -= 2 * a * a;
            decision += dx - dy + b * b;
        }
        plot(x, y);
        plot(-x, y);
        plot(x, -y);
        plot(-x, -y);
    }

    decision = b * b * (x + 0.5) * (x + 0.5) + a * a * (y - 1) * (y - 1) - a * a * b * b;

    while (y >= 0)
    {
        if (decision > 0)
        {
            y--;
            dy -= 2 * a * a;
            decision += a * a - dy;
        }
        else
        {
            y--;
            x++;
            dx += 2 * b * b;
            dy -= 2 * a * a;
            decision += dx - dy + a * a;
        }
        plot(x, y);
        plot(-x, y);
        plot(x, -y);
        plot(-x, -y);
    }

    glFlush();
}

int main(int argc, char **argv)
{
    cout << "Enter the coordinates of the center (x,y): ";
    cin >> xi >> yi;
    cout << "Enter the length of the major axis (a): ";
    cin >> a;
    cout << "Enter the length of the minor axis (b): ";
    cin >> b;

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 150);
    glutCreateWindow("Ellipse Drawing Algorithms-Atullya");
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glColor3f(0.0f, 0.0f, 0.0f);
    glPointSize(4.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 800, 0, 600);
    glutDisplayFunc(drawEllipse);
    glutMainLoop();

    return 0;
}


