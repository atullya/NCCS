#include <GL/glut.h>

int x_max=700,y_max=600;
int x_position=100;
int y_position=100;
int xstepsize=10,ystepsize=10;
int width=63;
int height=100;
void myInit(void)
{
	glClearColor(1.0, 0.5, 0.0, 1.0);

	glMatrixMode(GL_PROJECTION);

	glLoadIdentity();

	gluOrtho2D(0.0, 400.0, 0.0, 400.0);
}
void updatePolygon(int v)
{

    if(x_position+width>=x_max || x_position<0)
        xstepsize=-xstepsize;
   if(y_position+height>=y_max || y_position<0)
        ystepsize=-ystepsize;
        x_position+=xstepsize;
        y_position+=ystepsize;
        glutPostRedisplay();
        glutTimerFunc(10,updatePolygon,0);
}
void drawRectangle()
{
   glClear(GL_COLOR_BUFFER_BIT);
   int px1=x_position,py1=y_position;
   int px2=x_position+width,py2=y_position;
   int px3=x_position+width,py3=y_position+height;
   int px4=x_position,py4=y_position+height;
   glColor3d(1,0,0);
   glBegin(GL_POLYGON);
   glVertex2d(px1,py1);
    glVertex2d(px2,py2);
     glVertex2d(px3,py3);
      glVertex2d(px4,py4);
      glEnd();
      glFlush();
   }
int main(int argc, char *argv[]){

 glutInit(&argc, argv);


    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Drawing Shapes");
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
       gluOrtho2D(0, 800, 0, 600);

    glutDisplayFunc(drawRectangle);
    glutTimerFunc(0,updatePolygon,0);

    glutMainLoop();


return 0;
}
