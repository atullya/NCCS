Write a Java program to create a vehicle class hierarchy. The base class should be
Vehicle, with subclasses Truck, Car and Motorcycle. Each subclass should have
properties such as make, model, year, and fuel type. Implement methods for
calculating fuel efficiency, distance traveled, and maximum speed.
// Base class: Vehicle
class Vehicle {
    String make;
    String model;
    int year;
    String fuelType;

    // Constructor
    Vehicle(String make, String model, int year, String fuelType) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.fuelType = fuelType;
    }

    // Method to calculate fuel efficiency (to be overridden)
    public double getFuelEfficiency() {
        return 0.0;
    }

    // Method to calculate distance traveled = fuelEfficiency * fuelUsed
    public double getDistanceTraveled(double fuelUsed) {
        return getFuelEfficiency() * fuelUsed;
    }

    // Method to get max speed (to be overridden)
    public int getMaxSpeed() {
        return 0;
    }

    public void displayInfo() {
        System.out.println("Make: " + make + ", Model: " + model + ", Year: " + year + ", Fuel: " + fuelType);
    }
}

// Subclass: Truck
class Truck extends Vehicle {
    Truck(String make, String model, int year, String fuelType) {
        super(make, model, year, fuelType);
    }

    @Override
    public double getFuelEfficiency() {
        return 8.0; // km per liter (example value)
    }

    @Override
    public int getMaxSpeed() {
        return 120; // km/h (example)
    }
}

// Subclass: Car
class Car extends Vehicle {
    Car(String make, String model, int year, String fuelType) {
        super(make, model, year, fuelType);
    }

    @Override
    public double getFuelEfficiency() {
        return 15.0; // km per liter (example)
    }

    @Override
    public int getMaxSpeed() {
        return 180; // km/h
    }
}

// Subclass: Motorcycle
class Motorcycle extends Vehicle {
    Motorcycle(String make, String model, int year, String fuelType) {
        super(make, model, year, fuelType);
    }

    @Override
    public double getFuelEfficiency() {
        return 35.0; // km per liter
    }

    @Override
    public int getMaxSpeed() {
        return 160; // km/h
    }
}

// Main class to test the hierarchy
public class VehicleTest {
    public static void main(String[] args) {
        Truck truck = new Truck("Volvo", "FH16", 2020, "Diesel");
        Car car = new Car("Toyota", "Corolla", 2021, "Petrol");
        Motorcycle bike = new Motorcycle("Yamaha", "R15", 2022, "Petrol");

        // Test Truck
        truck.displayInfo();
        System.out.println("Fuel Efficiency: " + truck.getFuelEfficiency() + " km/l");
        System.out.println("Distance with 20L: " + truck.getDistanceTraveled(20) + " km");
        System.out.println("Max Speed: " + truck.getMaxSpeed() + " km/h\n");

        // Test Car
        car.displayInfo();
        System.out.println("Fuel Efficiency: " + car.getFuelEfficiency() + " km/l");
        System.out.println("Distance with 20L: " + car.getDistanceTraveled(20) + " km");
        System.out.println("Max Speed: " + car.getMaxSpeed() + " km/h\n");

        // Test Motorcycle
        bike.displayInfo();
        System.out.println("Fuel Efficiency: " + bike.getFuelEfficiency() + " km/l");
        System.out.println("Distance with 20L: " + bike.getDistanceTraveled(20) + " km");
        System.out.println("Max Speed: " + bike.getMaxSpeed() + " km/h");
    }
}
